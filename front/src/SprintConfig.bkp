import Periodo from "../components/Periodo";
import { periodoDefault } from "../objects/Defaunds";
import UsuariosSprint from "../components/UsuariosSprint";
import { useUsuarios } from "../providers/UsuarioDb";
import { useState } from "react";

export default function SprintConfig({}) {
  const { usuarios } = useUsuarios();
  const { id } = useState(1);

  const handlePeriodo = (date, index) => {
    const newSprints = { ...sprint };
    newSprints.pauses[index] = date;
    setSprint(newSprints);
  };

  const handleDate = (dataSprint, index) => {
    setSprint(dataSprint);
  };

  const handleDatePauseAdd = () => {
    const newSprints = { ...sprint };
    newSprints.pauses.push(new periodoDefault());
    setSprint(newSprints);
  };

  const handleUsuarioSprint = () => {};

  return (
    /*
    <div className="accordion-item" key={index}>
      <h2 className="accordion-header" id="flush-headingOne">
        <button
          className="accordion-button collapsed"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target={`#accord-body-${sprint.id}`}
          aria-expanded="false"
          aria-controls={`accord-body-${sprint.id}`}
        >
          {`Sprint nº ${sprint.id}, De ${sprint.dataInicial} à ${sprint.dataFinal}`}
        </button>
      </h2>
      <div
        id={`accord-body-${sprint.id}`}
        className="accordion-collapse collapse"
        aria-labelledby="flush-headingOne"
        data-bs-parent="#accordionFlushExample"
      >
        <div className="accordion-body border">
          <Periodo
            value={sprint}
            setValue={(dataSprint) => handleDate(dataSprint, index)}
            getDesc={false}
          />

          <div className="border p-3">
            <div className="d-flex align-items-center gap-1 mb-3">
              <h6 className="m-0">Pausas Sprints</h6>
              <button
                className="btn btn-success m-1 p-0 px-1 m-0"
                onClick={(e) => handleDatePauseAdd()}
                style={{ right: 0 }}
              >
                +
              </button>
            </div>
            <div className="d-flex flex-wrap">
              {sprint.pauses.map((pausa, iPausa) => {
                return (
                  <Periodo
                    value={pausa}
                    setValue={(pausa) => handlePeriodo(pausa, iPausa)}
                  />
                );
              })}
            </div>
          </div>

          <div className="border p-3">
            <h6>Usuários</h6>
            <div className="">
              {usuarios &&
                usuarios.map((el, i) => {
                  return (
                    <UsuariosSprint
                      usuarioDb={el}
                      usuarios={sprint.usuarios}
                      setUsuarioSprint={(e) => handleUsuarioSprint(e, i)}
                    />
                  );
                })}
            </div>
          </div>
        </div>
      </div>
    </div>
    */
  );
}
